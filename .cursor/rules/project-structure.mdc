# Mavericks Edge Web Application - Project Structure Guide

This is the **Mavericks Edge Web Application** - a full-stack digital solutions platform for SMBs and nonprofits, featuring web development, marketing, and AI integration services.

## Application Overview
- **Purpose**: Digital solutions agency platform for SMBs and nonprofits
- **Services**: Web development, marketing, and AI integration
- **Architecture**: Full-stack TypeScript with React frontend and Express.js backend

## System Architecture

### Frontend Architecture
- **Framework**: React 18 with TypeScript
- **Build Tool**: Vite for fast development and optimized builds
- **Routing**: Wouter for lightweight client-side routing
- **State Management**: React Query (TanStack Query) for server state management
- **Styling**: Tailwind CSS with custom design system
- **UI Components**: Radix UI primitives with shadcn/ui components
- **Animations**: Framer Motion for smooth page transitions and interactions

### Backend Architecture
- **Runtime**: Node.js with TypeScript
- **Framework**: Express.js for RESTful API endpoints
- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations
- **Email Service**: Resend API for transactional emails with fallback to Nodemailer
- **Validation**: Zod for schema validation and type safety

## Key Entry Points
- **Server**: [server/index.ts](mdc:server/index.ts) - Main Express server entry point
- **Client**: [client/src/main.tsx](mdc:client/src/main.tsx) - React application entry point
- **App Component**: [client/src/App.tsx](mdc:client/src/App.tsx) - Main React component
- **Database Schema**: [shared/schema.ts](mdc:shared/schema.ts) - Drizzle ORM schema definitions

## Project Structure
- `server/` - Express.js backend with TypeScript
- `client/` - React frontend with Vite
- `shared/` - Shared TypeScript code between client and server
- `public/` - Static assets
- `attached_assets/` - Additional assets

## Configuration Files
- [package.json](mdc:package.json) - Main dependencies and scripts
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration with path aliases
- [vite.config.ts](mdc:vite.config.ts) - Vite build configuration
- [tailwind.config.ts](mdc:tailwind.config.ts) - Tailwind CSS configuration
- [drizzle.config.ts](mdc:drizzle.config.ts) - Database ORM configuration

## Path Aliases
- `@/*` → `client/src/*`
- `@shared/*` → `shared/*`
- `@assets/*` → `attached_assets/*`

## Development Scripts
- `npm run dev` - Start development server (frontend: port 5173, backend: port 5000)
- `npm run build` - Build for production
- `npm run start` - Start production server
- `npm run db:push` - Push database schema changes

## Environment Configuration
- **Development**: Local development server with hot reload
- **Production**: Optimized build with environment-specific configurations
- **Database**: Requires `DATABASE_URL` environment variable
- **Email**: Requires `RESEND_API_KEY` for email functionality
