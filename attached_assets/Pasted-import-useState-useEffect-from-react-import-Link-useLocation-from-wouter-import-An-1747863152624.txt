import { useState, useEffect } from "react";
import { Link, useLocation } from "wouter";
import { AnimatePresence, motion } from "framer-motion";
import { X, Menu, ChevronDown } from "lucide-react";
// Assuming Logo, Button, and useIsMobile are correctly imported from your project structure
// For example:
// import Logo from "./Logo"; // Or appropriate path
// import { Button } from "@/components/ui/custom-button"; // Or appropriate path
// import { useIsMobile } from "@/hooks/use-mobile"; // Or appropriate path

// Mock components/hooks if actual ones are not provided for a runnable example
const Logo = ({ size, noLink, showText }) => (
  <div className={`bg-gray-300 ${size === "small" ? "w-8 h-8" : "w-12 h-12"} rounded-full flex items-center justify-center`}>
    <span className="text-xs text-gray-700">Logo</span>
  </div>
);

const Button = ({ href, variant, className, onClick, children, ...props }) => {
  const commonStyles = "py-2 px-4 rounded-md font-medium focus:outline-none focus:ring-2 focus:ring-offset-2";
  const variantStyles = variant === "primary" 
    ? "bg-maverick-orange text-white hover:bg-maverick-orange/90 focus:ring-maverick-orange"
    : "bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-400";
  
  if (href) {
    return (
      <Link href={href}>
        <a className={`${commonStyles} ${variantStyles} ${className}`} onClick={onClick} {...props}>
          {children}
        </a>
      </Link>
    );
  }
  return (
    <button className={`${commonStyles} ${variantStyles} ${className}`} onClick={onClick} {...props}>
      {children}
    </button>
  );
};

const useIsMobile = () => {
  const [isMobile, setIsMobile] = useState(false);
  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth < 768);
    checkMobile();
    window.addEventListener('resize', checkMobile);
    return () => window.removeEventListener('resize', checkMobile);
  }, []);
  return isMobile;
};


export default function Header() {
  const [isOpen, setIsOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const [location, navigate] = useLocation(); // wouter's useLocation returns [location, navigate]
  const isMobile = useIsMobile();

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  // Close mobile menu when location changes
  useEffect(() => {
    setIsOpen(false);
  }, [location]);

  const toggleMenu = () => setIsOpen(!isOpen);

  const headerClasses = `fixed top-0 left-0 w-full py-4 sm:py-6 px-4 sm:px-5 md:px-10 z-50 transition-all duration-300 ${
    isScrolled
      ? "bg-[#121212] bg-opacity-80 backdrop-blur-md shadow-md"
      : "bg-transparent"
  }`;

  const isCurrentPath = (path) => {
    // Simplified for example. Original logic for specific paths like /services/* should be retained if needed.
    if (path === '/services' && (location.startsWith('/services/') && location !== '/services')) {
      return false;
    }
    if (path === '/pricing' && (location.startsWith('/pricing/') && location !== '/pricing')) {
        return false;
    }
    return location === path || (path !== '/' && location.startsWith(`${path}/`));
  };
  

  const closeMenu = () => {
    setIsOpen(false);
  }

  return (
    <motion.header
      className={headerClasses}
      role="banner"
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      // Changed duration from 0.6 to 1.5 for a slower animation
      transition={{ duration: 1.5, delay: 4.2, ease: "easeOut" }} // Added easeOut for a smoother slowdown
    >
      <div className="container mx-auto flex justify-between items-center">
        <Link href="/" className="flex items-center" aria-label="Mavericks Edge Home">
          <Logo size={isMobile ? "small" : "large"} noLink={true} showText={false}/>
          <h1 className="font-heading font-bold text-xl sm:text-2xl md:text-3xl text-orange-500 ml-1 whitespace-nowrap mt-1 sm:mt-2" style={{ letterSpacing: '0', color: '#FF6600' }}> {/* Maverick Orange color */}
            Mavericks Edge
          </h1>
        </Link>

        {/* Mobile Menu Button */}
        <button
          onClick={toggleMenu}
          className="block md:hidden focus:outline-none z-50 bg-gray-800/50 p-2 rounded-full backdrop-blur-sm text-white" // bg-maverick-charcoal/50
          aria-label="Toggle menu"
          aria-expanded={isOpen}
          aria-controls="mobile-navigation"
        >
          {isOpen ? <X className="h-5 w-5" /> : <Menu className="h-5 w-5" />}
        </button>

        {/* Desktop Navigation */}
        <nav className="hidden md:flex items-center space-x-4 lg:space-x-8" role="navigation" aria-label="Main Navigation">
          <Link href="/" className={`px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-colors duration-200 ${isCurrentPath('/') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} aria-current={isCurrentPath('/') ? 'page' : undefined}>
            Home
          </Link>

          {/* Services dropdown */}
          <div className="relative group">
            <button
              type="button"
              aria-expanded="false" // This will be dynamically updated by JS if interactive, or managed by CSS :focus-within/:hover
              aria-haspopup="true"
              className={`px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-colors duration-200 inline-flex items-center ${
                isCurrentPath('/services') || isCurrentPath('/services/web') || isCurrentPath('/services/marketing') || isCurrentPath('/services/ai')
                  ? 'text-orange-500'
                  : 'text-white hover:text-orange-500'
              }`}
              // onClick={() => {}} // Dropdown handled by hover/focus for accessibility
            >
              <span>Services</span>
              <ChevronDown className="h-4 w-4 ml-1 transform transition-transform duration-300 group-hover:rotate-180" aria-hidden="true" />
            </button>
            <div className="absolute left-0 mt-2 w-56 opacity-0 invisible group-hover:opacity-100 group-hover:visible focus-within:opacity-100 focus-within:visible transform group-hover:translate-y-0 focus-within:translate-y-0 translate-y-[-10px] transition-all duration-300 ease-in-out z-50">
              <div className="py-1 bg-[#1A1A1A] border border-gray-700 rounded-md shadow-lg" role="menu" aria-orientation="vertical" aria-labelledby="services-menu-button"> {/* Assuming services-menu-button is id of button */}
                <Link href="/services" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/services') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/services') ? 'page' : undefined}>
                  All Services
                </Link>
                <Link href="/services/web" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/services/web') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/services/web') ? 'page' : undefined}>
                  Web Design & Development
                </Link>
                <Link href="/services/marketing" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/services/marketing') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/services/marketing') ? 'page' : undefined}>
                  Marketing & Creative
                </Link>
                <Link href="/services/ai" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/services/ai') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/services/ai') ? 'page' : undefined}>
                  AI Integration & Automation
                </Link>
              </div>
            </div>
          </div>

          {/* Pricing dropdown */}
          <div className="relative group">
            <button
              type="button"
              aria-expanded="false"
              aria-haspopup="true"
              className={`px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-colors duration-200 inline-flex items-center ${
                isCurrentPath('/pricing') || isCurrentPath('/pricing/web') || isCurrentPath('/pricing/marketing') || isCurrentPath('/pricing/ai')
                  ? 'text-orange-500'
                  : 'text-white hover:text-orange-500'
              }`}
            >
              <span>Pricing</span>
              <ChevronDown className="h-4 w-4 ml-1 transform transition-transform duration-300 group-hover:rotate-180" aria-hidden="true"/>
            </button>
            <div className="absolute left-0 mt-2 w-56 opacity-0 invisible group-hover:opacity-100 group-hover:visible focus-within:opacity-100 focus-within:visible transform group-hover:translate-y-0 focus-within:translate-y-0 translate-y-[-10px] transition-all duration-300 ease-in-out z-50">
              <div className="py-1 bg-[#1A1A1A] border border-gray-700 rounded-md shadow-lg" role="menu" aria-orientation="vertical" aria-labelledby="pricing-menu-button">
                <Link href="/pricing" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/pricing') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/pricing') ? 'page' : undefined}>
                  All Pricing Plans
                </Link>
                <Link href="/pricing/web" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/pricing/web') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/pricing/web') ? 'page' : undefined}>
                  Web Design & Development
                </Link>
                <Link href="/pricing/marketing" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/pricing/marketing') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/pricing/marketing') ? 'page' : undefined}>
                  Marketing & Creative
                </Link>
                <Link href="/pricing/ai" className={`block px-4 py-2 text-sm lg:text-base ${isCurrentPath('/pricing/ai') ? 'text-orange-500' : 'text-white hover:bg-orange-500/10 hover:text-orange-500'}`} role="menuitem" aria-current={isCurrentPath('/pricing/ai') ? 'page' : undefined}>
                  AI Integration & Automation
                </Link>
              </div>
            </div>
          </div>

          <Link href="/about" className={`px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-colors duration-200 ${isCurrentPath('/about') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} aria-current={isCurrentPath('/about') ? 'page' : undefined}>
            About
          </Link>
          <Link href="/contact" className={`px-3 py-2 rounded-md text-sm lg:text-base font-medium transition-colors duration-200 ${isCurrentPath('/contact') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} aria-current={isCurrentPath('/contact') ? 'page' : undefined}>
            Contact
          </Link>
        </nav>
      </div>

      {/* Mobile Navigation - Slide in from right */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ x: "100%" }}
            animate={{ x: 0 }}
            exit={{ x: "100%" }}
            transition={{ duration: 0.3, ease: "easeInOut" }}
            className="fixed inset-y-0 right-0 w-[70%] max-w-xs bg-gray-900 border-l border-gray-700/20 z-40 flex flex-col md:hidden" // bg-maverick-charcoal, border-maverick-slate/20
            role="dialog"
            aria-modal="true"
            aria-label="Main Menu"
            id="mobile-navigation"
          >
            <div className="flex flex-col items-center justify-center h-full pt-16"> {/* Added padding top for close button */}
                <button
                    onClick={toggleMenu}
                    className="absolute top-5 right-5 text-white focus:outline-none"
                    aria-label="Close menu"
                >
                    <X className="h-6 w-6" />
                </button>
              <motion.nav
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.2 }}
                className="flex flex-col items-center space-y-6 text-lg w-full px-5 text-center" // Reduced space-y from 8 to 6
                role="navigation"
                aria-label="Mobile Navigation"
              >
                <Link
                  href="/"
                  className={`py-3 w-full text-center border-b border-gray-700/20 text-base ${isCurrentPath('/') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} // border-maverick-slate/20
                  onClick={closeMenu}
                  aria-current={isCurrentPath('/') ? 'page' : undefined}
                >
                  Home
                </Link>

                {/* Mobile Services dropdown */}
                <div className="w-full text-center border-b border-gray-700/20 py-3"> {/* border-maverick-slate/20 */}
                  <button
                    onClick={(e) => {
                      e.preventDefault();
                      const dropdown = document.getElementById('mobile-services-dropdown');
                      const chevron = document.getElementById('mobile-services-chevron');
                      if (dropdown && chevron) {
                        const isExpanded = dropdown.classList.contains('max-h-48'); // Check against a class that indicates expansion
                        dropdown.classList.toggle('max-h-0', isExpanded);
                        dropdown.classList.toggle('max-h-48', !isExpanded); // Use a reasonable max-height
                        dropdown.classList.toggle('opacity-0', isExpanded);
                        dropdown.classList.toggle('opacity-100', !isExpanded);
                        dropdown.classList.toggle('mt-2', !isExpanded); // Add margin when expanded
                        chevron.classList.toggle('rotate-180');
                        e.currentTarget.setAttribute('aria-expanded', String(!isExpanded));
                      }
                    }}
                    className="cursor-pointer inline-flex items-center justify-center py-1 w-full text-center text-base text-white hover:text-orange-500 pl-4" // text-maverick-orange
                    aria-haspopup="true"
                    aria-expanded="false"
                    aria-controls="mobile-services-dropdown"
                    id="services-mobile-menu-button"
                  >
                    Services
                    <ChevronDown id="mobile-services-chevron" className="ml-1 h-4 w-4 transition-transform duration-300" aria-hidden="true" />
                  </button>
                  <div
                    id="mobile-services-dropdown"
                    className="max-h-0 w-full overflow-hidden opacity-0 transition-all duration-300 ease-in-out"
                    role="menu"
                    aria-labelledby="services-mobile-menu-button"
                  >
                    <Link href="/services" className={`block py-2 text-center text-sm ${isCurrentPath('/services') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/services') ? 'page' : undefined}>
                      All Services
                    </Link>
                    <Link href="/services/web" className={`block py-2 text-center text-sm ${isCurrentPath('/services/web') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/services/web') ? 'page' : undefined}>
                      Web Design & Development
                    </Link>
                    <Link href="/services/marketing" className={`block py-2 text-center text-sm ${isCurrentPath('/services/marketing') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/services/marketing') ? 'page' : undefined}>
                      Marketing & Creative
                    </Link>
                    <Link href="/services/ai" className={`block py-2 text-center text-sm ${isCurrentPath('/services/ai') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/services/ai') ? 'page' : undefined}>
                      AI Integration & Automation
                    </Link>
                  </div>
                </div>

                {/* Mobile Pricing dropdown */}
                 <div className="w-full text-center border-b border-gray-700/20 py-3"> {/* border-maverick-slate/20 */}
                  <button
                    onClick={(e) => {
                      e.preventDefault();
                      const dropdown = document.getElementById('mobile-pricing-dropdown');
                      const chevron = document.getElementById('mobile-pricing-chevron');
                       if (dropdown && chevron) {
                        const isExpanded = dropdown.classList.contains('max-h-48');
                        dropdown.classList.toggle('max-h-0', isExpanded);
                        dropdown.classList.toggle('max-h-48', !isExpanded);
                        dropdown.classList.toggle('opacity-0', isExpanded);
                        dropdown.classList.toggle('opacity-100', !isExpanded);
                        dropdown.classList.toggle('mt-2', !isExpanded);
                        chevron.classList.toggle('rotate-180');
                        e.currentTarget.setAttribute('aria-expanded', String(!isExpanded));
                      }
                    }}
                    className="cursor-pointer inline-flex items-center justify-center py-1 w-full text-center text-base text-white hover:text-orange-500 pl-4" // text-maverick-orange
                    aria-haspopup="true"
                    aria-expanded="false"
                    aria-controls="mobile-pricing-dropdown"
                    id="pricing-mobile-menu-button"
                  >
                    Pricing
                    <ChevronDown id="mobile-pricing-chevron" className="ml-1 h-4 w-4 transition-transform duration-300" aria-hidden="true" />
                  </button>
                  <div
                    id="mobile-pricing-dropdown"
                    className="max-h-0 w-full overflow-hidden opacity-0 transition-all duration-300 ease-in-out"
                    role="menu"
                    aria-labelledby="pricing-mobile-menu-button"
                  >
                    <Link href="/pricing" className={`block py-2 text-center text-sm ${isCurrentPath('/pricing') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/pricing') ? 'page' : undefined}>
                      All Pricing Plans
                    </Link>
                    <Link href="/pricing/web" className={`block py-2 text-center text-sm ${isCurrentPath('/pricing/web') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/pricing/web') ? 'page' : undefined}>
                      Web Design & Development
                    </Link>
                    <Link href="/pricing/marketing" className={`block py-2 text-center text-sm ${isCurrentPath('/pricing/marketing') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/pricing/marketing') ? 'page' : undefined}>
                      Marketing & Creative
                    </Link>
                    <Link href="/pricing/ai" className={`block py-2 text-center text-sm ${isCurrentPath('/pricing/ai') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} onClick={closeMenu} role="menuitem" aria-current={isCurrentPath('/pricing/ai') ? 'page' : undefined}>
                      AI Integration & Automation
                    </Link>
                  </div>
                </div>


                <Link
                  href="/about"
                  className={`py-3 w-full text-center border-b border-gray-700/20 text-base ${isCurrentPath('/about') ? 'text-orange-500' : 'text-white hover:text-orange-500'}`} // border-maverick-slate/20
                  onClick={closeMenu}
                  aria-current={isCurrentPath('/about') ? 'page' : undefined}
                >
                  About
                </Link>
                <div className="w-full text-center pt-4"> {/* Added padding top */}
                  <Button
                    href="/contact"
                    variant="primary" // This will use the mock Button's primary style
                    className="px-5 py-2.5 text-base mx-auto" // Adjusted padding and text size
                    onClick={closeMenu}
                    // aria-current={isCurrentPath('/contact') ? 'page' : undefined} // Button itself is not a page link in this context for aria-current
                  >
                    Contact
                  </Button>
                </div>
              </motion.nav>
            </div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Backdrop for mobile menu */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.2 }}
            className="fixed inset-0 bg-black/50 backdrop-blur-sm z-30 md:hidden"
            onClick={toggleMenu}
            aria-hidden="true" // Backdrop is presentational
          />
        )}
      </AnimatePresence>
    </motion.header>
  );
}

// To make this component runnable standalone for testing, you might need a minimal App structure:
// import React from 'react';
// import { Router, Route } from "wouter";
//
// // Placeholder for Tailwind CSS if not globally available
// // In a real app, Tailwind is usually set up globally.
// // You might need to add <script src="https://cdn.tailwindcss.com"></script> to your HTML head for this example.
//
// const PlaceholderPage = ({ name }) => <div className="pt-32 text-center text-white">This is the {name} page. Scroll down to see header effect. <div style={{height: "200vh"}}></div></div>;
//
// function App() {
//   return (
//     <Router>
//       <Header />
//       <Route path="/"><PlaceholderPage name="Home" /></Route>
//       <Route path="/services"><PlaceholderPage name="Services" /></Route>
//       <Route path="/services/web"><PlaceholderPage name="Web Services" /></Route>
//       <Route path="/services/marketing"><PlaceholderPage name="Marketing Services" /></Route>
//       <Route path="/services/ai"><PlaceholderPage name="AI Services" /></Route>
//       <Route path="/pricing"><PlaceholderPage name="Pricing" /></Route>
//       <Route path="/pricing/web"><PlaceholderPage name="Web Pricing" /></Route>
//       <Route path="/pricing/marketing"><PlaceholderPage name="Marketing Pricing" /></Route>
//       <Route path="/pricing/ai"><PlaceholderPage name="AI Pricing" /></Route>
//       <Route path="/about"><PlaceholderPage name="About" /></Route>
//       <Route path="/contact"><PlaceholderPage name="Contact" /></Route>
//       {/* Fallback for any other path to ensure Header is always visible */}
//       <Route path="/:rest*"><PlaceholderPage name="Other" /></Route>
//     </Router>
//   );
// }
//
// export default App; // Export App if this is the main file for testing
